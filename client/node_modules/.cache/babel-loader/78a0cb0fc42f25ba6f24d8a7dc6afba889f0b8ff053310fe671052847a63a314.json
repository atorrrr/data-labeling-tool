{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/labeling-tool/client/src/pages/LLMSessionCreate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Typography, TextField, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LLMSessionCreate() {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/llm-review/session`, {\n        name,\n        description\n      });\n      navigate(`/llm-review/${res.data.sessionId}`);\n    } catch (err) {\n      alert('Failed to create session');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Create LLM Review Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      sx: {\n        mt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"name\",\n        label: \"Session Name\",\n        name: \"name\",\n        autoFocus: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"description\",\n        label: \"Description\",\n        name: \"description\",\n        multiline: true,\n        rows: 4,\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        children: \"Create Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(LLMSessionCreate, \"TSrAKlHl/9cLJTfZ48NmqeWE+tw=\", false, function () {\n  return [useNavigate];\n});\n_c = LLMSessionCreate;\nexport default LLMSessionCreate;\nvar _c;\n$RefreshReg$(_c, \"LLMSessionCreate\");","map":{"version":3,"names":["React","useState","useNavigate","axios","Container","Typography","TextField","Button","Box","jsxDEV","_jsxDEV","LLMSessionCreate","_s","name","setName","description","setDescription","navigate","handleSubmit","e","preventDefault","res","post","process","env","REACT_APP_API_URL","data","sessionId","err","alert","maxWidth","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","sx","mt","margin","required","fullWidth","id","label","autoFocus","value","onChange","target","multiline","rows","type","mb","_c","$RefreshReg$"],"sources":["/home/ec2-user/labeling-tool/client/src/pages/LLMSessionCreate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Container, Typography, TextField, Button, Box } from '@mui/material';\r\n\r\nfunction LLMSessionCreate() {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/llm-review/session`, { name, description });\r\n      navigate(`/llm-review/${res.data.sessionId}`);\r\n    } catch (err) {\r\n      alert('Failed to create session');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Create LLM Review Session\r\n      </Typography>\r\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"Session Name\"\r\n          name=\"name\"\r\n          autoFocus\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          multiline\r\n          rows={4}\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Create Session\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LLMSessionCreate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}